version: '2'

services:

### Drone Server #######################################
  drone-server:
    image: ${DRONE_DOCKER_IMAGE}
    ports:
      - ${DRONE_PORT}:8000
      - 9000:9000
    volumes:
      - "${SAVE_PATH}/drone:/var/lib/drone"
    privileged: true
    restart: always
    depends_on:
      - ${DB_HOST}
    environment:
      - DRONE_HOST=${DRONE_HOST}
      - DRONE_OPEN=${DRONE_OPEN}
      - DRONE_GITHUB=${DRONE_GITHUB}
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
     # - DRONE_GITHUB_SCOPE=${DRONE_GITHUB_SCOPE}
     # - DRONE_GITHUB_SKIP_VERIFY=${DRONE_GITHUB_SKIP_VERIFY}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_ADMIN=${DRONE_ADMIN}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_DATABASE_DRIVER=${DB_DRIVER}
      - DRONE_DATABASE_DATASOURCE=${DB_DRIVER}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}?sslmode=disable
    networks:
      - backend
      - frontend

### MariaDB Container #######################################

  mariadb:
    image: mariadb:latest
    restart: always
    volumes:
      - ${SAVE_PATH}/mariadb:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    networks:
      - backend

### PostgreSQL Container ####################################
  
  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - ${SAVE_PATH}/postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - backend

### Drone Agent #######################################
  drone-agent-01:
    image: ${DRONE_DOCKER_AGENT_IMAGE}
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_MAX_PROCS=2
    networks:
      - backend

  drone-agent-02:
    image: ${DRONE_DOCKER_AGENT_IMAGE}
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_MAX_PROCS=2
    networks:
      - backend
      
### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mariadb:
    driver: "local"