version: '2'

services:

### Drone Server #######################################
  drone-server:
    image: ${DRONE_DOCKER_IMAGE}
    ports:
      - ${DRONE_PORT}:8000
    volumes:
      - "${SAVE_PATH}/drone:/var/lib/drone"
    privileged: true
    restart: always
    environment:
      - DRONE_HOST=${DRONE_HOST}
      - DRONE_OPEN=${DRONE_OPEN}
      - DRONE_GITHUB=${DRONE_GITHUB}
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_GITHUB_SCOPE=${DRONE_GITHUB_SCOPE}
      - DRONE_GITHUB_SKIP_VERIFY=${DRONE_GITHUB_SKIP_VERIFY}      
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_ADMIN=${DRONE_ADMIN}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DATABASE_DRIVER=${DB_CONNECTION}
      - DATABASE_CONFIG=${DB_USERNAME}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_DATABASE}?parseTime=true
    networks:
      - backend
      - frontend

### MariaDB Container #######################################

  mariadb:
    image: mariadb:10.3
    volumes:
      - ${SAVE_PATH}/mariadb:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    networks:
      - backend

### Drone Agent #######################################
  drone-agent-01:
    image: ${DRONE_DOCKER_IMAGE}
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
    networks:
      - backend

  drone-agent-02:
    image: ${DRONE_DOCKER_IMAGE}
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
    networks:
      - backend

  drone-agent-03:
    image: ${DRONE_DOCKER_IMAGE}
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
    networks:
      - backend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mariadb:
    driver: "local"